{
  "stats": {
    "suites": 4,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2020-10-21T16:24:01.157Z",
    "end": "2020-10-21T16:25:20.035Z",
    "duration": 40319,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a8afd0db-ffba-4237-81a1-e35540ce40e2",
      "title": "",
      "fullFile": "cypress\\integration\\cucumber-tests\\feedback.feature",
      "file": "cypress\\integration\\cucumber-tests\\feedback.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "14922672-1434-4bb4-99ab-b45efd53056c",
          "title": "Feedback",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Form assertions",
              "fullTitle": "Feedback Form assertions",
              "timedOut": null,
              "duration": 2078,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "03bf65f1-061b-405b-8027-19898c2d3fd7",
              "parentUUID": "14922672-1434-4bb4-99ab-b45efd53056c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Submit feedback using fixture file",
              "fullTitle": "Feedback Submit feedback using fixture file",
              "timedOut": null,
              "duration": 2801,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c7b07a02-ab8f-418b-9fc7-9119b51039c8",
              "parentUUID": "14922672-1434-4bb4-99ab-b45efd53056c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Submit feedback visual regression various viewports",
              "fullTitle": "Feedback Submit feedback visual regression various viewports",
              "timedOut": null,
              "duration": 7550,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4febc31d-d8b3-4207-a18c-da105118884b",
              "parentUUID": "14922672-1434-4bb4-99ab-b45efd53056c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Submit feedback visual regression various viewports single element",
              "fullTitle": "Feedback Submit feedback visual regression various viewports single element",
              "timedOut": null,
              "duration": 5159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "01c8f075-cd75-430e-8dc2-7cbdc33aa2c7",
              "parentUUID": "14922672-1434-4bb4-99ab-b45efd53056c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Submit multiple Feedback forms using scenario outline examples (example #1)",
              "fullTitle": "Feedback Submit multiple Feedback forms using scenario outline examples (example #1)",
              "timedOut": null,
              "duration": 1911,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4568a42e-a0ef-4c95-ae40-0d5e34b9b6e1",
              "parentUUID": "14922672-1434-4bb4-99ab-b45efd53056c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Submit multiple Feedback forms using scenario outline examples (example #2)",
              "fullTitle": "Feedback Submit multiple Feedback forms using scenario outline examples (example #2)",
              "timedOut": null,
              "duration": 1889,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ec25fe7d-ab70-4c98-bfe6-d1f1da7d188a",
              "parentUUID": "14922672-1434-4bb4-99ab-b45efd53056c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Submit multiple Feedback forms using scenario outline examples (example #3)",
              "fullTitle": "Feedback Submit multiple Feedback forms using scenario outline examples (example #3)",
              "timedOut": null,
              "duration": 1955,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "23342600-35c6-4fda-a555-cf3f98f4964b",
              "parentUUID": "14922672-1434-4bb4-99ab-b45efd53056c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03bf65f1-061b-405b-8027-19898c2d3fd7",
            "c7b07a02-ab8f-418b-9fc7-9119b51039c8",
            "4febc31d-d8b3-4207-a18c-da105118884b",
            "01c8f075-cd75-430e-8dc2-7cbdc33aa2c7",
            "4568a42e-a0ef-4c95-ae40-0d5e34b9b6e1",
            "ec25fe7d-ab70-4c98-bfe6-d1f1da7d188a",
            "23342600-35c6-4fda-a555-cf3f98f4964b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23343,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "23437af4-2050-479a-bb16-ed372cbf43a0",
      "title": "",
      "fullFile": "cypress\\integration\\cucumber-tests\\login.feature",
      "file": "cypress\\integration\\cucumber-tests\\login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3131b28c-cd2d-476f-912a-64a64e8cfe1c",
          "title": "Login to the website",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Invalid login",
              "fullTitle": "Login to the website Invalid login",
              "timedOut": null,
              "duration": 2970,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4506952c-280e-4324-903a-2d02d27bfa7a",
              "parentUUID": "3131b28c-cd2d-476f-912a-64a64e8cfe1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valid login",
              "fullTitle": "Login to the website Valid login",
              "timedOut": null,
              "duration": 3262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a7e809e5-f6c1-48e5-b107-924526ad719d",
              "parentUUID": "3131b28c-cd2d-476f-912a-64a64e8cfe1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4506952c-280e-4324-903a-2d02d27bfa7a",
            "a7e809e5-f6c1-48e5-b107-924526ad719d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2e878aa6-7926-44e7-88c7-be4d1dc5559c",
      "title": "",
      "fullFile": "cypress\\integration\\cucumber-tests\\transfer.feature",
      "file": "cypress\\integration\\cucumber-tests\\transfer.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "64804aca-ea6e-4b85-846f-a663f2a26de4",
          "title": "Transfer",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Transfer funds (example #1)",
              "fullTitle": "Transfer Transfer funds (example #1)",
              "timedOut": null,
              "duration": 6064,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5382711b-a46f-4091-ab27-de18d97acfe1",
              "parentUUID": "64804aca-ea6e-4b85-846f-a663f2a26de4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Transfer funds (example #2)",
              "fullTitle": "Transfer Transfer funds (example #2)",
              "timedOut": null,
              "duration": 3725,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c9645217-d283-40a9-8486-e6cec86f210c",
              "parentUUID": "64804aca-ea6e-4b85-846f-a663f2a26de4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5382711b-a46f-4091-ab27-de18d97acfe1",
            "c9645217-d283-40a9-8486-e6cec86f210c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9789,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0146837f-62f8-4fe9-b949-c5c7d37f9e3a",
      "title": "",
      "fullFile": "cypress\\integration\\cucumber-tests\\api.feature",
      "file": "cypress\\integration\\cucumber-tests\\api.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d784e5c-d4a7-464a-bbc5-a51e836b3829",
          "title": "api",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Pokemon validate request",
              "fullTitle": "api Pokemon validate request",
              "timedOut": null,
              "duration": 854,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9e619a46-cbcd-4780-a5cb-bb48cb192c70",
              "parentUUID": "6d784e5c-d4a7-464a-bbc5-a51e836b3829",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate invalid endpoint",
              "fullTitle": "api Validate invalid endpoint",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ebeeb7fe-15d4-4e93-852b-e72fa4f7c239",
              "parentUUID": "6d784e5c-d4a7-464a-bbc5-a51e836b3829",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e619a46-cbcd-4780-a5cb-bb48cb192c70",
            "ebeeb7fe-15d4-4e93-852b-e72fa4f7c239"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 955,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}